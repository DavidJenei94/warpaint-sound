version: "3.8"

name: warpaint-sound-dev
services:
  ui:
    depends_on:
      - db
      - api
    build:
      context: ./frontend
      dockerfile: ./Dockerfile
    container_name: wpsound_frontend
    env_file: ./.env
    ports:
      - 3001:3000
    working_dir: /app/frontend
    volumes:
      - ./frontend:/app/frontend
    environment:
      - WATCHPACK_POLLING=$WATCHPACK_POLLING # replaced: - CHOKIDAR_USEPOLLING=true / to check changes in react
      - WDS_SOCKET_PORT=$WDS_SOCKET_PORT # https://stackoverflow.com/questions/70585472/websocketclient-js16-websocket-connection-to-ws-localhost3000-ws-failed-r
      - REACT_APP_RECAPTCHA_SITE_KEY=$RECAPTCHA_SITE_KEY # react env vars must start with REACT_APP_
      - REACT_APP_BACKEND_URL=$BACKEND_URL
      - REACT_APP_FRONTEND_URL=$FRONTEND_URL
      # https://github.com/facebook/create-react-app/issues/10253 
      # https://stackoverflow.com/questions/70488471/docker-with-create-react-app-is-not-updating-changes
  api:
    depends_on:
      - db
    build:
      context: ./backend
      dockerfile: ./Dockerfile
    container_name: wpsound_backend
    env_file: ./.env
    ports:
      - 8002:8002
    working_dir: /app/backend
    volumes:
      - ./backend:/app/backend
    environment:
      - DB_HOST=wpsound_db
      - DB_USER=$DB_USER
      - DB_PASSWORD=$DB_PASSWORD
      - DB_NAME=$DB_NAME
      - DB_PORT=$DB_PORT
      - DB_DIALECT=postgres
      - TOKEN_KEY=$TOKEN_KEY
      - WARPAINTVISION_GMAIL_EMAIL=$WARPAINTVISION_GMAIL_EMAIL
      - WARPAINTVISION_GMAIL_PASSWORD=$WARPAINTVISION_GMAIL_PASSWORD
  db:
    image: postgres
    container_name: wpsound_db
    ports:
      - '5432:5432'
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=$DB_USER
      - POSTGRES_PASSWORD=$DB_PASSWORD
      - POSTGRES_DB=$DB_NAME
  pgadmin:
    depends_on:
      - db
    container_name: wpsound_pgadmin4
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=$PGADMIN_EMAIL
      - PGADMIN_DEFAULT_PASSWORD=$PGADMIN_PASSWORD
    ports:
      - '5051:80'
volumes:
  db-data:

  # docker-compose up -d --build
  # docker-compose up -d --build <service_name>
